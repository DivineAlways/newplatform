'use client';

import { useState } from 'react';

interface EndpointResponse {
  content: string;
  extractedContent: string;
}

interface BaseEndpointFormProps {
  endpoint: string;
  title: string;
  description: string;
  extraFields?: React.ReactNode;
}

export default function BaseEndpointForm({ endpoint, title, description, extraFields }: BaseEndpointFormProps) {
  const [userMessage, setUserMessage] = useState('');
  const [outputFormat, setOutputFormat] = useState<'text' | 'markdown' | 'json'>('text');
  const [response, setResponse] = useState<EndpointResponse | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);
    setError(null);

    try {
      const res = await fetch(`/api/${endpoint}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userMessage,
          outputFormat,
        }),
      });

      if (!res.ok) {
        const error = await res.json();
        throw new Error(error.error || 'Failed to get response');
      }

      const data = await res.json();
      setResponse(data);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'An error occurred');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="max-w-4xl mx-auto p-4 space-y-6">
      <div className="mb-4">
        <h2 className="text-xl font-bold mb-2 text-black dark:text-white">{title}</h2>
        <p className="text-gray-600 dark:text-gray-300">{description}</p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-4">
        <div>
          <label htmlFor="message" className="block text-sm font-medium mb-2 text-black dark:text-white">
            Enter your message
          </label>
          <textarea
            id="message"
            value={userMessage}
            onChange={(e) => setUserMessage(e.target.value)}
            className="w-full p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
            rows={4}
            required
          />
        </div>

        {extraFields}

        <div className="flex items-center space-x-4">
          <select
            value={outputFormat}
            onChange={(e) => setOutputFormat(e.target.value as 'text' | 'markdown' | 'json')}
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="text">Text</option>
            <option value="markdown">Markdown</option>
            <option value="json">JSON</option>
          </select>
        </div>

        <button
          type="submit"
          disabled={isLoading}
          className="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 disabled:bg-blue-300"
        >
          {isLoading ? 'Processing...' : 'Submit'}
        </button>
      </form>

      {error && (
        <div className="p-4 bg-red-100 text-red-700 rounded-md">
          {error}
        </div>
      )}

      {response && (
        <div className="space-y-4">
          <div className="p-4 bg-gray-100 dark:bg-gray-800 rounded-md">
            <h3 className="font-medium mb-2 text-black dark:text-white">Response:</h3>
            <p className="whitespace-pre-wrap text-black dark:text-white">{response.content}</p>
          </div>
          
          <div className="p-4 bg-gray-100 dark:bg-gray-800 rounded-md">
            <h3 className="font-medium mb-2 text-black dark:text-white">Extracted Content:</h3>
            <p className="whitespace-pre-wrap text-black dark:text-white">{response.extractedContent}</p>
          </div>
        </div>
      )}
    </div>
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function WebScrapeForm() {
  return (
    <BaseEndpointForm
      endpoint="web-scrape"
      title="Web Scraping"
      description="Extract and analyze content from web pages."
      extraFields={
        <div className="flex items-center space-x-4">
          <label className="flex items-center space-x-2">
            <input
              type="checkbox"
              name="summarize"
              className="rounded"
            />
            <span className="text-sm text-black dark:text-white">Summarize content</span>
          </label>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function ContentCreationForm() {
  return (
    <BaseEndpointForm
      endpoint="content-creation"
      title="Content Creation"
      description="Generate professional content for various purposes."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="tone"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="professional">Professional</option>
            <option value="casual">Casual</option>
            <option value="academic">Academic</option>
            <option value="creative">Creative</option>
          </select>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function MarketResearchForm() {
  return (
    <BaseEndpointForm
      endpoint="market-research"
      title="Market Research"
      description="Analyze market trends and gather competitive intelligence."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="depth"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="basic">Basic</option>
            <option value="detailed">Detailed</option>
            <option value="comprehensive">Comprehensive</option>
          </select>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function EducationForm() {
  return (
    <BaseEndpointForm
      endpoint="education"
      title="Education"
      description="Generate educational content and learning materials."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="level"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="beginner">Beginner</option>
            <option value="intermediate">Intermediate</option>
            <option value="advanced">Advanced</option>
          </select>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function EcommerceForm() {
  return (
    <BaseEndpointForm
      endpoint="ecommerce"
      title="E-commerce Analysis"
      description="Analyze e-commerce data and generate insights for online stores."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="analysisType"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="pricing">Pricing Analysis</option>
            <option value="market">Market Analysis</option>
            <option value="competitor">Competitor Analysis</option>
            <option value="trends">Trend Analysis</option>
          </select>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function SocialMediaForm() {
  return (
    <BaseEndpointForm
      endpoint="social-media"
      title="Social Media Content"
      description="Generate and analyze social media content across platforms."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="platform"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="twitter">Twitter</option>
            <option value="linkedin">LinkedIn</option>
            <option value="instagram">Instagram</option>
            <option value="facebook">Facebook</option>
          </select>
          <select
            name="contentType"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="post">Post</option>
            <option value="thread">Thread</option>
            <option value="campaign">Campaign</option>
          </select>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function SoftwareTestingForm() {
  return (
    <BaseEndpointForm
      endpoint="software-testing"
      title="Software Testing"
      description="Generate test cases and testing strategies for software applications."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="testType"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="unit">Unit Tests</option>
            <option value="integration">Integration Tests</option>
            <option value="e2e">End-to-End Tests</option>
            <option value="performance">Performance Tests</option>
          </select>
          <select
            name="framework"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="jest">Jest</option>
            <option value="cypress">Cypress</option>
            <option value="selenium">Selenium</option>
            <option value="playwright">Playwright</option>
          </select>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function WorkflowAutomationForm() {
  return (
    <BaseEndpointForm
      endpoint="workflow-automation"
      title="Workflow Automation"
      description="Design and optimize automated workflows for business processes."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="workflowType"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="approval">Approval Process</option>
            <option value="onboarding">Onboarding</option>
            <option value="documentation">Documentation</option>
            <option value="deployment">Deployment</option>
          </select>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function AccessibilityForm() {
  return (
    <BaseEndpointForm
      endpoint="accessibility"
      title="Accessibility Analysis"
      description="Analyze and improve web accessibility compliance."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="standard"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="wcag2.1">WCAG 2.1</option>
            <option value="wcag2.2">WCAG 2.2</option>
            <option value="section508">Section 508</option>
          </select>
          <select
            name="level"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="A">Level A</option>
            <option value="AA">Level AA</option>
            <option value="AAA">Level AAA</option>
          </select>
        </div>
      }
    />
  );
}
'use client';

import BaseEndpointForm from './BaseEndpointForm';

export default function AIBrowsingForm() {
  return (
    <BaseEndpointForm
      endpoint="ai-browsing"
      title="AI-Assisted Browsing"
      description="Intelligent web browsing and research assistance."
      extraFields={
        <div className="flex items-center space-x-4">
          <select
            name="depth"
            className="p-2 border rounded-md bg-gray-100 dark:bg-gray-800 text-black dark:text-white"
          >
            <option value="basic">Basic</option>
            <option value="detailed">Detailed</option>
            <option value="comprehensive">Comprehensive</option>
          </select>
          <label className="flex items-center space-x-2">
            <input
              type="checkbox"
              name="includeSources"
              className="rounded"
            />
            <span className="text-sm text-black dark:text-white">Include Sources</span>
          </label>
        </div>
      }
    />
  );
}
'use client';

import { useState } from 'react';
import ChatForm from './ChatForm';
import WebScrapeForm from './endpoints/WebScrapeForm';
import ContentCreationForm from './endpoints/ContentCreationForm';
import MarketResearchForm from './endpoints/MarketResearchForm';
import EducationForm from './endpoints/EducationForm';
import EcommerceForm from './endpoints/EcommerceForm';
import SocialMediaForm from './endpoints/SocialMediaForm';
import SoftwareTestingForm from './endpoints/SoftwareTestingForm';
import WorkflowAutomationForm from './endpoints/WorkflowAutomationForm';
import AccessibilityForm from './endpoints/AccessibilityForm';
import AIBrowsingForm from './endpoints/AIBrowsingForm';

const endpoints = [
  { id: 'chat', label: 'Chat', component: ChatForm },
  { id: 'web-scrape', label: 'Web Scraping', component: WebScrapeForm },
  { id: 'content-creation', label: 'Content Creation', component: ContentCreationForm },
  { id: 'market-research', label: 'Market Research', component: MarketResearchForm },
  { id: 'education', label: 'Education', component: EducationForm },
  { id: 'ecommerce', label: 'E-commerce', component: EcommerceForm },
  { id: 'social-media', label: 'Social Media', component: SocialMediaForm },
  { id: 'software-testing', label: 'Software Testing', component: SoftwareTestingForm },
  { id: 'workflow-automation', label: 'Workflow Automation', component: WorkflowAutomationForm },
  { id: 'accessibility', label: 'Accessibility', component: AccessibilityForm },
  { id: 'ai-browsing', label: 'AI Browsing', component: AIBrowsingForm }
];

export default function EndpointLayout() {
  const [activeEndpoint, setActiveEndpoint] = useState('chat');

  const ActiveComponent = endpoints.find(e => e.id === activeEndpoint)?.component || ChatForm;

  return (
    <div className="min-h-screen bg-white dark:bg-gray-900">
      <div className="flex flex-col md:flex-row">
        {/* Sidebar */}
        <div className="w-full md:w-64 p-4 bg-gray-100 dark:bg-gray-800">
          <nav className="space-y-2">
            {endpoints.map((endpoint) => (
              <button
                key={endpoint.id}
                onClick={() => setActiveEndpoint(endpoint.id)}
                className={`w-full text-left px-4 py-2 rounded-md transition-colors ${
                  activeEndpoint === endpoint.id
                    ? 'bg-blue-500 text-white'
                    : 'text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
                }`}
              >
                {endpoint.label}
              </button>
            ))}
          </nav>
        </div>

        {/* Main Content */}
        <div className="flex-1 p-4">
          <ActiveComponent />
        </div>
      </div>
    </div>
  );
}
'use client'

import ReactMarkdown from 'react-markdown'

interface DocsPageProps {
  markdownContent: string
}

export default function DocsPage({ markdownContent }: DocsPageProps) {
  return (
    <div className="container mx-auto px-4 py-8 prose dark:prose-invert max-w-none">
      <ReactMarkdown>{markdownContent}</ReactMarkdown>
    </div>
  )
}
'use client'

import ReactMarkdown from 'react-markdown'

interface DocsPageProps {
  markdownContent: string
}

export default function DocsPage({ markdownContent }: DocsPageProps) {
  return (
    <div className="container mx-auto px-4 py-8 prose dark:prose-invert max-w-none">
      <ReactMarkdown>{markdownContent}</ReactMarkdown>
    </div>
  )
}
